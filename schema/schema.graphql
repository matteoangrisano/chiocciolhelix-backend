schema {
  query: Query
  mutation: Mutation
}

type Query {
  productList: [Product]
  orderList(customerEmail: String, status: OrderStatus): [Order]
}

type Mutation {
  productCreate(input: ProductCreateInput!): Product
  orderCreate(input: OrderCreateInput!): Order
}

type Product {
  id: ID!
  name: String!
  category: String!
  price: Float!
  unitType: UnitType!
  availability: Boolean
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

type Order {
  id: ID!
  customerEmail: String!
  items: [OrderItem!]!
  totalPrice: Float!
  status: OrderStatus!
  createdAt: String!
}

type OrderItem {
  productId: ID!
  productName: String!
  quantity: Float!
  unitPrice: Float!
  totalPrice: Float!
  unitType: UnitType!
}

enum UnitType {
  kg
  pezzo
}

input ProductCreateInput {
  name: String!
  category: String!
  price: Float!
  unitType: UnitType!
  availability: Boolean
}

input OrderCreateInput {
  customerEmail: String!
  items: [OrderItemInput!]!
  totalPrice: Float!
  status: OrderStatus
}

input OrderItemInput {
  productId: ID!
  productName: String!
  quantity: Float!
  unitPrice: Float!
  totalPrice: Float!
  unitType: UnitType!
}
